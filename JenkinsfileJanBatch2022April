def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {
		
def mavenHome = tool name: "maven 3.8.5"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

echo "Github Branch Name is : ${env.BRANCH_NAME} "
echo "The node name is: ${env.NODE_NAME} "
echo "The jo name is: ${env.JOB_NAME} "
echo "The build number is: ${env.BUILD_NUMBER} "

try{

	// Checkout Stage
	stage ('CheckoutCode'){
	sendSlackNotifications('STARTED')
		git branch: 'development', credentialsId: '480fb18b-cc3c-4381-9aaf-58f82ca235c6', url: 'https://github.com/Vasanth198/maven-web-application.git'
	}
		
	//Build stage
	stage ('Build'){
		sh "$mavenHome/bin/mvn clean package"	
	}
		
	//Generate Sonarqube report
	stage('SonarQubeReport'){
		sh "$mavenHome/bin/mvn sonar:sonar"
	}
	
	//Upload Artifact into Artifactory repo
	stage('UploadArtifactToNexus'){
		sh "$mavenHome/bin/mvn deploy"
	}

	//Deploy app into tomcat server
	stage('DeployAppIntoTomcat'){
		sshagent(['bbcde0e6-583a-4584-920d-41a20f661c89']) {
			sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.187.113:/opt/apache-tomcat-9.0.59/webapps"
		}
	}
}//try closing

catch(e){
	currentBuild.result = "Failed"

}//Catch closing

finally{
sendSlackNotifications(currentBuild.result)
}

}//Node closing
